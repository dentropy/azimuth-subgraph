// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipRenounced extends ethereum.Event {
  get params(): OwnershipRenounced__Params {
    return new OwnershipRenounced__Params(this);
  }
}

export class OwnershipRenounced__Params {
  _event: OwnershipRenounced;

  constructor(event: OwnershipRenounced) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Ecliptic extends ethereum.SmartContract {
  static bind(address: Address): Ecliptic {
    return new Ecliptic("Ecliptic", address);
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(_tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  InterfaceId_ERC165(): Bytes {
    let result = super.call(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      []
    );

    return result[0].toBytes();
  }

  try_InterfaceId_ERC165(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "InterfaceId_ERC165",
      "InterfaceId_ERC165():(bytes4)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  depositAddress(): Address {
    let result = super.call("depositAddress", "depositAddress():(address)", []);

    return result[0].toAddress();
  }

  try_depositAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "depositAddress",
      "depositAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasuryUpgradeHash(): Bytes {
    let result = super.call(
      "treasuryUpgradeHash",
      "treasuryUpgradeHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_treasuryUpgradeHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "treasuryUpgradeHash",
      "treasuryUpgradeHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  canEscapeTo(_point: BigInt, _sponsor: BigInt): boolean {
    let result = super.call(
      "canEscapeTo",
      "canEscapeTo(uint32,uint32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_point),
        ethereum.Value.fromUnsignedBigInt(_sponsor)
      ]
    );

    return result[0].toBoolean();
  }

  try_canEscapeTo(
    _point: BigInt,
    _sponsor: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canEscapeTo",
      "canEscapeTo(uint32,uint32):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_point),
        ethereum.Value.fromUnsignedBigInt(_sponsor)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exists(_tokenId: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toBoolean();
  }

  try_exists(_tokenId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  treasuryProxy(): Address {
    let result = super.call("treasuryProxy", "treasuryProxy():(address)", []);

    return result[0].toAddress();
  }

  try_treasuryProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "treasuryProxy",
      "treasuryProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(_tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  treasuryUpgraded(): boolean {
    let result = super.call(
      "treasuryUpgraded",
      "treasuryUpgraded():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_treasuryUpgraded(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "treasuryUpgraded",
      "treasuryUpgraded():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  tokenURI(_tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  azimuth(): Address {
    let result = super.call("azimuth", "azimuth():(address)", []);

    return result[0].toAddress();
  }

  try_azimuth(): ethereum.CallResult<Address> {
    let result = super.tryCall("azimuth", "azimuth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  claims(): Address {
    let result = super.call("claims", "claims():(address)", []);

    return result[0].toAddress();
  }

  try_claims(): ethereum.CallResult<Address> {
    let result = super.tryCall("claims", "claims():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  polls(): Address {
    let result = super.call("polls", "polls():(address)", []);

    return result[0].toAddress();
  }

  try_polls(): ethereum.CallResult<Address> {
    let result = super.tryCall("polls", "polls():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(_owner: Address, _operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    _owner: Address,
    _operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddress(_operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  previousEcliptic(): Address {
    let result = super.call(
      "previousEcliptic",
      "previousEcliptic():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_previousEcliptic(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "previousEcliptic",
      "previousEcliptic():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getSpawnLimit(_point: BigInt, _time: BigInt): BigInt {
    let result = super.call(
      "getSpawnLimit",
      "getSpawnLimit(uint32,uint256):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(_point),
        ethereum.Value.fromUnsignedBigInt(_time)
      ]
    );

    return result[0].toBigInt();
  }

  try_getSpawnLimit(
    _point: BigInt,
    _time: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSpawnLimit",
      "getSpawnLimit(uint32,uint256):(uint32)",
      [
        ethereum.Value.fromUnsignedBigInt(_point),
        ethereum.Value.fromUnsignedBigInt(_time)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class StartDocumentPollCall extends ethereum.Call {
  get inputs(): StartDocumentPollCall__Inputs {
    return new StartDocumentPollCall__Inputs(this);
  }

  get outputs(): StartDocumentPollCall__Outputs {
    return new StartDocumentPollCall__Outputs(this);
  }
}

export class StartDocumentPollCall__Inputs {
  _call: StartDocumentPollCall;

  constructor(call: StartDocumentPollCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _proposal(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class StartDocumentPollCall__Outputs {
  _call: StartDocumentPollCall;

  constructor(call: StartDocumentPollCall) {
    this._call = call;
  }
}

export class DetachCall extends ethereum.Call {
  get inputs(): DetachCall__Inputs {
    return new DetachCall__Inputs(this);
  }

  get outputs(): DetachCall__Outputs {
    return new DetachCall__Outputs(this);
  }
}

export class DetachCall__Inputs {
  _call: DetachCall;

  constructor(call: DetachCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DetachCall__Outputs {
  _call: DetachCall;

  constructor(call: DetachCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _approved(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class UpdateDocumentPollCall extends ethereum.Call {
  get inputs(): UpdateDocumentPollCall__Inputs {
    return new UpdateDocumentPollCall__Inputs(this);
  }

  get outputs(): UpdateDocumentPollCall__Outputs {
    return new UpdateDocumentPollCall__Outputs(this);
  }
}

export class UpdateDocumentPollCall__Inputs {
  _call: UpdateDocumentPollCall;

  constructor(call: UpdateDocumentPollCall) {
    this._call = call;
  }

  get _proposal(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UpdateDocumentPollCall__Outputs {
  _call: UpdateDocumentPollCall;

  constructor(call: UpdateDocumentPollCall) {
    this._call = call;
  }
}

export class OnUpgradeCall extends ethereum.Call {
  get inputs(): OnUpgradeCall__Inputs {
    return new OnUpgradeCall__Inputs(this);
  }

  get outputs(): OnUpgradeCall__Outputs {
    return new OnUpgradeCall__Outputs(this);
  }
}

export class OnUpgradeCall__Inputs {
  _call: OnUpgradeCall;

  constructor(call: OnUpgradeCall) {
    this._call = call;
  }
}

export class OnUpgradeCall__Outputs {
  _call: OnUpgradeCall;

  constructor(call: OnUpgradeCall) {
    this._call = call;
  }
}

export class TransferPointCall extends ethereum.Call {
  get inputs(): TransferPointCall__Inputs {
    return new TransferPointCall__Inputs(this);
  }

  get outputs(): TransferPointCall__Outputs {
    return new TransferPointCall__Outputs(this);
  }
}

export class TransferPointCall__Inputs {
  _call: TransferPointCall;

  constructor(call: TransferPointCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _reset(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class TransferPointCall__Outputs {
  _call: TransferPointCall;

  constructor(call: TransferPointCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class CreateGalaxyCall extends ethereum.Call {
  get inputs(): CreateGalaxyCall__Inputs {
    return new CreateGalaxyCall__Inputs(this);
  }

  get outputs(): CreateGalaxyCall__Outputs {
    return new CreateGalaxyCall__Outputs(this);
  }
}

export class CreateGalaxyCall__Inputs {
  _call: CreateGalaxyCall;

  constructor(call: CreateGalaxyCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateGalaxyCall__Outputs {
  _call: CreateGalaxyCall;

  constructor(call: CreateGalaxyCall) {
    this._call = call;
  }
}

export class SetTransferProxyCall extends ethereum.Call {
  get inputs(): SetTransferProxyCall__Inputs {
    return new SetTransferProxyCall__Inputs(this);
  }

  get outputs(): SetTransferProxyCall__Outputs {
    return new SetTransferProxyCall__Outputs(this);
  }
}

export class SetTransferProxyCall__Inputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _transferProxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetTransferProxyCall__Outputs {
  _call: SetTransferProxyCall;

  constructor(call: SetTransferProxyCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class ConfigureKeysCall extends ethereum.Call {
  get inputs(): ConfigureKeysCall__Inputs {
    return new ConfigureKeysCall__Inputs(this);
  }

  get outputs(): ConfigureKeysCall__Outputs {
    return new ConfigureKeysCall__Outputs(this);
  }
}

export class ConfigureKeysCall__Inputs {
  _call: ConfigureKeysCall;

  constructor(call: ConfigureKeysCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _encryptionKey(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _authenticationKey(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _cryptoSuiteVersion(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _discontinuous(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ConfigureKeysCall__Outputs {
  _call: ConfigureKeysCall;

  constructor(call: ConfigureKeysCall) {
    this._call = call;
  }
}

export class UpgradeTreasuryCall extends ethereum.Call {
  get inputs(): UpgradeTreasuryCall__Inputs {
    return new UpgradeTreasuryCall__Inputs(this);
  }

  get outputs(): UpgradeTreasuryCall__Outputs {
    return new UpgradeTreasuryCall__Outputs(this);
  }
}

export class UpgradeTreasuryCall__Inputs {
  _call: UpgradeTreasuryCall;

  constructor(call: UpgradeTreasuryCall) {
    this._call = call;
  }

  get _treasuryImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeTreasuryCall__Outputs {
  _call: UpgradeTreasuryCall;

  constructor(call: UpgradeTreasuryCall) {
    this._call = call;
  }
}

export class CastUpgradeVoteCall extends ethereum.Call {
  get inputs(): CastUpgradeVoteCall__Inputs {
    return new CastUpgradeVoteCall__Inputs(this);
  }

  get outputs(): CastUpgradeVoteCall__Outputs {
    return new CastUpgradeVoteCall__Outputs(this);
  }
}

export class CastUpgradeVoteCall__Inputs {
  _call: CastUpgradeVoteCall;

  constructor(call: CastUpgradeVoteCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _proposal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _vote(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CastUpgradeVoteCall__Outputs {
  _call: CastUpgradeVoteCall;

  constructor(call: CastUpgradeVoteCall) {
    this._call = call;
  }
}

export class UpdateUpgradePollCall extends ethereum.Call {
  get inputs(): UpdateUpgradePollCall__Inputs {
    return new UpdateUpgradePollCall__Inputs(this);
  }

  get outputs(): UpdateUpgradePollCall__Outputs {
    return new UpdateUpgradePollCall__Outputs(this);
  }
}

export class UpdateUpgradePollCall__Inputs {
  _call: UpdateUpgradePollCall;

  constructor(call: UpdateUpgradePollCall) {
    this._call = call;
  }

  get _proposal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateUpgradePollCall__Outputs {
  _call: UpdateUpgradePollCall;

  constructor(call: UpdateUpgradePollCall) {
    this._call = call;
  }
}

export class CastDocumentVoteCall extends ethereum.Call {
  get inputs(): CastDocumentVoteCall__Inputs {
    return new CastDocumentVoteCall__Inputs(this);
  }

  get outputs(): CastDocumentVoteCall__Outputs {
    return new CastDocumentVoteCall__Outputs(this);
  }
}

export class CastDocumentVoteCall__Inputs {
  _call: CastDocumentVoteCall;

  constructor(call: CastDocumentVoteCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _proposal(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _vote(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CastDocumentVoteCall__Outputs {
  _call: CastDocumentVoteCall;

  constructor(call: CastDocumentVoteCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetManagementProxyCall extends ethereum.Call {
  get inputs(): SetManagementProxyCall__Inputs {
    return new SetManagementProxyCall__Inputs(this);
  }

  get outputs(): SetManagementProxyCall__Outputs {
    return new SetManagementProxyCall__Outputs(this);
  }
}

export class SetManagementProxyCall__Inputs {
  _call: SetManagementProxyCall;

  constructor(call: SetManagementProxyCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _manager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetManagementProxyCall__Outputs {
  _call: SetManagementProxyCall;

  constructor(call: SetManagementProxyCall) {
    this._call = call;
  }
}

export class StartUpgradePollCall extends ethereum.Call {
  get inputs(): StartUpgradePollCall__Inputs {
    return new StartUpgradePollCall__Inputs(this);
  }

  get outputs(): StartUpgradePollCall__Outputs {
    return new StartUpgradePollCall__Outputs(this);
  }
}

export class StartUpgradePollCall__Inputs {
  _call: StartUpgradePollCall;

  constructor(call: StartUpgradePollCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _proposal(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class StartUpgradePollCall__Outputs {
  _call: StartUpgradePollCall;

  constructor(call: StartUpgradePollCall) {
    this._call = call;
  }
}

export class SpawnCall extends ethereum.Call {
  get inputs(): SpawnCall__Inputs {
    return new SpawnCall__Inputs(this);
  }

  get outputs(): SpawnCall__Outputs {
    return new SpawnCall__Outputs(this);
  }
}

export class SpawnCall__Inputs {
  _call: SpawnCall;

  constructor(call: SpawnCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SpawnCall__Outputs {
  _call: SpawnCall;

  constructor(call: SpawnCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get _operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetVotingProxyCall extends ethereum.Call {
  get inputs(): SetVotingProxyCall__Inputs {
    return new SetVotingProxyCall__Inputs(this);
  }

  get outputs(): SetVotingProxyCall__Outputs {
    return new SetVotingProxyCall__Outputs(this);
  }
}

export class SetVotingProxyCall__Inputs {
  _call: SetVotingProxyCall;

  constructor(call: SetVotingProxyCall) {
    this._call = call;
  }

  get _galaxy(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _voter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetVotingProxyCall__Outputs {
  _call: SetVotingProxyCall;

  constructor(call: SetVotingProxyCall) {
    this._call = call;
  }
}

export class SetSpawnProxyCall extends ethereum.Call {
  get inputs(): SetSpawnProxyCall__Inputs {
    return new SetSpawnProxyCall__Inputs(this);
  }

  get outputs(): SetSpawnProxyCall__Outputs {
    return new SetSpawnProxyCall__Outputs(this);
  }
}

export class SetSpawnProxyCall__Inputs {
  _call: SetSpawnProxyCall;

  constructor(call: SetSpawnProxyCall) {
    this._call = call;
  }

  get _prefix(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _spawnProxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetSpawnProxyCall__Outputs {
  _call: SetSpawnProxyCall;

  constructor(call: SetSpawnProxyCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetDnsDomainsCall extends ethereum.Call {
  get inputs(): SetDnsDomainsCall__Inputs {
    return new SetDnsDomainsCall__Inputs(this);
  }

  get outputs(): SetDnsDomainsCall__Outputs {
    return new SetDnsDomainsCall__Outputs(this);
  }
}

export class SetDnsDomainsCall__Inputs {
  _call: SetDnsDomainsCall;

  constructor(call: SetDnsDomainsCall) {
    this._call = call;
  }

  get _primary(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _secondary(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _tertiary(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SetDnsDomainsCall__Outputs {
  _call: SetDnsDomainsCall;

  constructor(call: SetDnsDomainsCall) {
    this._call = call;
  }
}

export class RejectCall extends ethereum.Call {
  get inputs(): RejectCall__Inputs {
    return new RejectCall__Inputs(this);
  }

  get outputs(): RejectCall__Outputs {
    return new RejectCall__Outputs(this);
  }
}

export class RejectCall__Inputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectCall__Outputs {
  _call: RejectCall;

  constructor(call: RejectCall) {
    this._call = call;
  }
}

export class EscapeCall extends ethereum.Call {
  get inputs(): EscapeCall__Inputs {
    return new EscapeCall__Inputs(this);
  }

  get outputs(): EscapeCall__Outputs {
    return new EscapeCall__Outputs(this);
  }
}

export class EscapeCall__Inputs {
  _call: EscapeCall;

  constructor(call: EscapeCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _sponsor(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EscapeCall__Outputs {
  _call: EscapeCall;

  constructor(call: EscapeCall) {
    this._call = call;
  }
}

export class AdoptCall extends ethereum.Call {
  get inputs(): AdoptCall__Inputs {
    return new AdoptCall__Inputs(this);
  }

  get outputs(): AdoptCall__Outputs {
    return new AdoptCall__Outputs(this);
  }
}

export class AdoptCall__Inputs {
  _call: AdoptCall;

  constructor(call: AdoptCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AdoptCall__Outputs {
  _call: AdoptCall;

  constructor(call: AdoptCall) {
    this._call = call;
  }
}

export class CancelEscapeCall extends ethereum.Call {
  get inputs(): CancelEscapeCall__Inputs {
    return new CancelEscapeCall__Inputs(this);
  }

  get outputs(): CancelEscapeCall__Outputs {
    return new CancelEscapeCall__Outputs(this);
  }
}

export class CancelEscapeCall__Inputs {
  _call: CancelEscapeCall;

  constructor(call: CancelEscapeCall) {
    this._call = call;
  }

  get _point(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelEscapeCall__Outputs {
  _call: CancelEscapeCall;

  constructor(call: CancelEscapeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _previous(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _azimuth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _polls(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _claims(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _treasuryProxy(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
